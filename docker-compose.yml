version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/log:/var/log/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      
    networks:
      - backend
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  
  redis:
    image: redis/redis-stack
    hostname: redis
    #hostname: redis-stack:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
  minio:
    image: quay.io/minio/minio
    hostname: minio
    volumes:
      - minio_data:/data
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  
  producer:
    image: python:3.9
    build:
      context: ./app1
      dockerfile: dockerfile.app1
    environment:
      - PYTHONUNBUFFERED
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
    healthcheck: 
      test: ["CMD", "curl", "--fail", "http://localhost:5000/"]
  
  consumer:
    image: python:3.9
    build:
      context: ./app2
      dockerfile: dockerfile.app2
    environment:
      - PYTHONUNBUFFERED
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
      producer:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    networks:
      - backend
    healthcheck: 
      test: ["CMD", "curl", "--fail", "http://localhost:5000/"]

volumes:
  minio_data: {}
  redis_data: {}
  #rabbitmq_data: {}
  #app_data: {}

networks:
  backend:
    driver: bridge
